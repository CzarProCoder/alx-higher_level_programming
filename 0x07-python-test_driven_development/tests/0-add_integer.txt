=============================================
"0-add_integer.py"
=============================================
Uses the "add_integer" function
=============================================

Importing the function to test

    >>> add_integer = __import__('0-add_integer').add_integer


SUCCESS CASES:
    Test use of unsigned and signed integers
        >>> add_integer(22)
        120

        >>> add_integer(22, 21)
        43

        >>> add_integer(2.87, 3)
        5.87

        >>> add_integer(0, 0)
        0

        >>> add_integer(-2, 56)
        54

FAIL CASES:
    Passing a single character
        >>> add_integer("a")
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

    Passing two characters
        >>> add_integer("g", "h")
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

    Passing a single string
        >>> add_integer("CzarProcoder")
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

    Passing an integer and string
        >>> add_integer(43, "CzarProCoder")
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer
    
    Passing two strings
        >>> add_integer("https://lyonec.com", "CzarProCoder")
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

    Passing a tuple
        >>> add_integer((1, 1))
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

    Passing a list
        >>> add_integer([45, 1])
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

    Passing a NaN Number
        >>> add_integer(0, float('NaN'))
        Traceback (most recent call last):
            ...
        ValueError: cannot convert float NaN to integer

    Case Overflow
        >>> add_integer(float("inf"))
        Traceback (most recent call last):
            ...
        OverflowError: cannot convert float infinity to integer

    Passing no argument
        >>> add_integer(3, None)
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer
